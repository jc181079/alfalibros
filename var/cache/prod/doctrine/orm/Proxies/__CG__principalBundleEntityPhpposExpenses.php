<?php

namespace Proxies\__CG__\principalBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PhpposExpenses extends \principalBundle\Entity\PhpposExpenses implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseType', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseDescription', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseReason', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseDate', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseAmount', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseTax', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseNote', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'deleted', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'id', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'approvedEmployee', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'category', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'employee', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'location'];
        }

        return ['__isInitialized__', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseType', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseDescription', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseReason', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseDate', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseAmount', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseTax', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'expenseNote', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'deleted', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'id', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'approvedEmployee', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'category', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'employee', '' . "\0" . 'principalBundle\\Entity\\PhpposExpenses' . "\0" . 'location'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PhpposExpenses $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setExpenseType($expenseType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpenseType', [$expenseType]);

        return parent::setExpenseType($expenseType);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpenseType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpenseType', []);

        return parent::getExpenseType();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpenseDescription($expenseDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpenseDescription', [$expenseDescription]);

        return parent::setExpenseDescription($expenseDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpenseDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpenseDescription', []);

        return parent::getExpenseDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpenseReason($expenseReason)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpenseReason', [$expenseReason]);

        return parent::setExpenseReason($expenseReason);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpenseReason()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpenseReason', []);

        return parent::getExpenseReason();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpenseDate($expenseDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpenseDate', [$expenseDate]);

        return parent::setExpenseDate($expenseDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpenseDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpenseDate', []);

        return parent::getExpenseDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpenseAmount($expenseAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpenseAmount', [$expenseAmount]);

        return parent::setExpenseAmount($expenseAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpenseAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpenseAmount', []);

        return parent::getExpenseAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpenseTax($expenseTax)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpenseTax', [$expenseTax]);

        return parent::setExpenseTax($expenseTax);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpenseTax()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpenseTax', []);

        return parent::getExpenseTax();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpenseNote($expenseNote)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpenseNote', [$expenseNote]);

        return parent::setExpenseNote($expenseNote);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpenseNote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpenseNote', []);

        return parent::getExpenseNote();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted($deleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', [$deleted]);

        return parent::setDeleted($deleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeleted', []);

        return parent::getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setApprovedEmployee(\principalBundle\Entity\PhpposEmployees $approvedEmployee = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApprovedEmployee', [$approvedEmployee]);

        return parent::setApprovedEmployee($approvedEmployee);
    }

    /**
     * {@inheritDoc}
     */
    public function getApprovedEmployee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApprovedEmployee', []);

        return parent::getApprovedEmployee();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(\principalBundle\Entity\PhpposCategories $category = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmployee(\principalBundle\Entity\PhpposEmployees $employee = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmployee', [$employee]);

        return parent::setEmployee($employee);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployee', []);

        return parent::getEmployee();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation(\principalBundle\Entity\PhpposLocations $location = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', [$location]);

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', []);

        return parent::getLocation();
    }

}
