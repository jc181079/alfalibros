<?php

namespace principalBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * PhpposItemKits
 *
 * @ORM\Table(name="phppos_item_kits", uniqueConstraints={@ORM\UniqueConstraint(name="item_kit_number", columns={"item_kit_number"}), @ORM\UniqueConstraint(name="product_id", columns={"product_id"})}, indexes={@ORM\Index(name="deleted", columns={"deleted"}), @ORM\Index(name="phppos_item_kits_ibfk_1", columns={"category_id"}), @ORM\Index(name="full_search", columns={"name", "item_kit_number", "product_id", "description"}), @ORM\Index(name="name_search", columns={"name"}), @ORM\Index(name="item_kit_number_search", columns={"item_kit_number"}), @ORM\Index(name="product_id_search", columns={"product_id"}), @ORM\Index(name="description_search", columns={"description"})})
 * @ORM\Entity
 */
class PhpposItemKits
{
    /**
     * @var string
     *
     * @ORM\Column(name="item_kit_number", type="string", length=255, nullable=true)
     */
    private $itemKitNumber;

    /**
     * @var string
     *
     * @ORM\Column(name="product_id", type="string", length=255, nullable=true)
     */
    private $productId;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255, nullable=false)
     */
    private $name;

    /**
     * @var string
     *
     * @ORM\Column(name="description", type="string", length=255, nullable=false)
     */
    private $description;

    /**
     * @var integer
     *
     * @ORM\Column(name="tax_included", type="integer", nullable=false)
     */
    private $taxIncluded = '0';

    /**
     * @var string
     *
     * @ORM\Column(name="unit_price", type="decimal", precision=23, scale=10, nullable=true)
     */
    private $unitPrice;

    /**
     * @var string
     *
     * @ORM\Column(name="cost_price", type="decimal", precision=23, scale=10, nullable=true)
     */
    private $costPrice;

    /**
     * @var integer
     *
     * @ORM\Column(name="override_default_tax", type="integer", nullable=false)
     */
    private $overrideDefaultTax = '0';

    /**
     * @var string
     *
     * @ORM\Column(name="commission_percent", type="decimal", precision=23, scale=10, nullable=true)
     */
    private $commissionPercent = '0.0000000000';

    /**
     * @var string
     *
     * @ORM\Column(name="commission_percent_type", type="string", length=255, nullable=true)
     */
    private $commissionPercentType = '';

    /**
     * @var string
     *
     * @ORM\Column(name="commission_fixed", type="decimal", precision=23, scale=10, nullable=true)
     */
    private $commissionFixed = '0.0000000000';

    /**
     * @var integer
     *
     * @ORM\Column(name="change_cost_price", type="integer", nullable=false)
     */
    private $changeCostPrice = '0';

    /**
     * @var integer
     *
     * @ORM\Column(name="deleted", type="integer", nullable=false)
     */
    private $deleted = '0';

    /**
     * @var integer
     *
     * @ORM\Column(name="item_kit_id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $itemKitId;

    /**
     * @var \principalBundle\Entity\PhpposCategories
     *
     * @ORM\ManyToOne(targetEntity="principalBundle\Entity\PhpposCategories")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="category_id", referencedColumnName="id")
     * })
     */
    private $category;

    /**
     * @var \Doctrine\Common\Collections\Collection
     *
     * @ORM\ManyToMany(targetEntity="principalBundle\Entity\PhpposLocations", mappedBy="itemKit")
     */
    private $location;

    /**
     * @var \Doctrine\Common\Collections\Collection
     *
     * @ORM\ManyToMany(targetEntity="principalBundle\Entity\PhpposTags", inversedBy="itemKit")
     * @ORM\JoinTable(name="phppos_item_kits_tags",
     *   joinColumns={
     *     @ORM\JoinColumn(name="item_kit_id", referencedColumnName="item_kit_id")
     *   },
     *   inverseJoinColumns={
     *     @ORM\JoinColumn(name="tag_id", referencedColumnName="id")
     *   }
     * )
     */
    private $tag;

    /**
     * @var \Doctrine\Common\Collections\Collection
     *
     * @ORM\ManyToMany(targetEntity="principalBundle\Entity\PhpposPriceTiers", mappedBy="itemKit")
     */
    private $tier;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->location = new \Doctrine\Common\Collections\ArrayCollection();
        $this->tag = new \Doctrine\Common\Collections\ArrayCollection();
        $this->tier = new \Doctrine\Common\Collections\ArrayCollection();
    }

}

